<project name="windows" default="jar">

  <tstamp/>

  <!--===== Properties =====================================================-->

  <property name="common-dir" value="../lightcrafts"/>
  <property file="${common-dir}/resources/com/lightcrafts/utils/resources/Version.properties"/>

  <exec executable="uname" vmlauncher="false" failonerror="true"
        outputproperty="processor">
    <arg value="-m"/>
  </exec>
  <property environment="env"/>
  <condition property="64bit">
    <or>
      <matches string="${env.TARGET_ARCH}" pattern="x86_64"/>
      <matches string="${env.TARGET_ARCH}" pattern="amd64"/>
      <and>
        <not>
          <matches string="${env.TARGET_ARCH}" pattern="i.*86"/>
        </not>
        <matches string="${processor}" pattern="^.*64$"/>
      </and>
    </or>
  </condition>
  <condition property="jre-arch" value="amd64" else="x86">
    <isset property="64bit"/>
  </condition>

  <property name="installer-name" value="${app-name}-Installer-${jre-arch}.exe"/>
  <property name="windows-jar" value="products/lightcrafts-windows.jar"/>

  <!-- The default maxmemory for the run* targets. -->
  <property name="maxmemory" value="512m"/>

  <exec executable="cat" vmlauncher="false" failonerror="true"
        outputproperty="app-version">
    <arg value="${common-dir}/version.txt"/>
  </exec>

  <condition property="USE_ICC" value="1" else="0">
    <isset property="USE_ICC"/>
  </condition>

  <!--===== Application build ==============================================-->

  <target name="common">
    <ant dir="${common-dir}" target="jar"/>
    <exec executable="make" dir="products" failonerror="true"
          vmlauncher="false">
      <arg value="-j"/>
    </exec>
  </target>

  <target name="javac" depends="common">
    <mkdir dir="build"/>
    <mkdir dir="javah"/>
    <javac destdir="build" debug="true"
           release="11" nativeheaderdir="javah">
      <src path="src"/>
      <classpath>
        <fileset dir="${common-dir}/products">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${common-dir}/lib">
          <include name="lombok*.jar"/>
          <include name="annotations*.jar"/>
          <include name="jsr305*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="jni">
    <exec executable="make" dir="jnisrc" failonerror="true" vmlauncher="false"/>
  </target>

  <target name="build" depends="javac, jni"/>

  <target name="help">
    <exec executable="make" dir="resources/help" failonerror="true"
          vmlauncher="false">
      <arg value="APP_NAME=${app-name}"/>
    </exec>
  </target>

  <!--===== Make a jar file ================================================-->

  <target name="jar" depends="build">
    <delete file="${windows-jar}"/>
    <jar jarfile="${windows-jar}">
      <fileset dir="build"/>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="${company-name}"/>
        <attribute name="Implementation-Version"
                   value="${app-version} ${TODAY}"/>
      </manifest>
    </jar>
  </target>

  <target name="check-for-jar">
    <condition property="jar-exists">
      <available file="${windows-jar}"/>
    </condition>
  </target>
  
  <target name="jar-if-necessary" depends="check-for-jar" unless="jar-exists">
    <ant target="jar"/>
  </target>

  <!--===== Run the application ============================================-->

  <target name="run" depends="jar-if-necessary">
    <java classname="com.lightcrafts.platform.windows.WindowsLauncher"
          dir="products" failonerror="true" fork="true"
          maxmemory="${maxmemory}">
      <!--
      <jvmarg value="-Xincgc"/>
      -->
      <classpath>
        <fileset dir="products">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <sysproperty key="java.library.path" value="."/>
      <sysproperty key="com.lightcrafts.zorn" value="true"/>
      <sysproperty key="lightcrafts.debug" value="1"/>
      <sysproperty key="IDE" value="1"/>
      <sysproperty key="file.encoding" value="UTF8"/>
      <sysproperty key="lensfun.dir" value="./share/lensfun"/>
    </java>
  </target>

  <!--===== Make a Windows installer =======================================-->

  <taskdef name="install4j"
         classname="com.install4j.Install4JTask"
         classpath="C:\Program Files\install4j8\bin\ant.jar"/>

  <target name="build-installer-only">
    <install4j projectfile="lightzone-${jre-arch}.install4j"
               license="${env.INSTALL4J_LICENSE}"
               winKeystorePassword="${env.WIN_KEYSTORE_PASSWORD}">
      <vmparameter value="-DLC_VERSION=${app-version}"/>
    </install4j>
  </target>
  <target name="build-installer" depends="jar, help, build-installer-only"/>

  <!--===== Clean up =======================================================-->

  <target name="clean-up-native">
    <ant dir="${common-dir}" target="clean-up-native"/>
    <exec executable="make" dir="jnisrc">
      <arg value="${clean-method}"/>
    </exec>
    <exec executable="make" dir="products">
      <arg value="${clean-method}"/>
    </exec>
  </target>

  <target name="clean-native">
    <antcall target="clean-up-native">
      <param name="clean-method" value="distclean"/>
    </antcall>
  </target>

  <target name="clean-up">
    <ant dir="${common-dir}" target="${clean-method}"/>
    <parallel>
      <delete dir="build"/>
      <delete dir="javah"/>
      <delete file="${installer-name}"/>
      <delete file="products/lightzone.jvmargs"/>
    </parallel>
    <antcall target="clean-native"/>
    <exec executable="make" dir="products">
      <arg value="-j"/>
      <arg value="${clean-method}"/>
    </exec>
  </target>

  <target name="distclean">
    <antcall target="clean-up">
      <param name="clean-method" value="distclean"/>
    </antcall>
  </target>
  <target name="clean" depends="distclean"/>

  <target name="mostlyclean">
    <antcall target="clean-up">
      <param name="clean-method" value="mostlyclean"/>
    </antcall>
  </target>

</project>
<!-- vim:set et sw=2 ts=2: -->
