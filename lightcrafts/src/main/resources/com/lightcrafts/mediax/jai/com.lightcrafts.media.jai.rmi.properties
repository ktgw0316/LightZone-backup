#
# $RCSfile: com.lightcrafts.media.jai.rmi.properties,v $
#
# Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved.
#
# Use is subject to license terms.
#
# $Revision: 1.1 $
# $Date: 2005/02/11 04:56:55 $
# $State: Exp $
#
Generic0=The method parameter(s) may not be null.

ColorModelProxy0=Unknown ColorModel class.
ColorModelProxy1=Unknown ColorModel type.
ColorModelState0=Unknown ColorModel class.
ColorModelState1=Unknown ColorModel type.

DataBufferProxy0=Unsupported data type.
DataBufferState0=Unsupported data type.

InterfaceHandler0=The number of implementations must equal the number of interfaces.
InterfaceHandler1=Implementations must be compatible with specified interfaces.
InterfaceHandler2= has no compatible implementation.
InterfaceHandler3= cannot be evaluated by proxy.

JAIRMICRIF0=serverName argument cannot be null.
JAIRMICRIF1=operationName argument cannot be null.
JAIRMICRIF2=renderContext argument cannot be null.
JAIRMICRIF3=paramBlock argument cannot be null.
JAIRMICRIF4=image argument cannot be null.
JAIRMICRIF5=RemoteException occurs in mapRenderContext()
JAIRMICRIF6=RemoteException occurs in getBounds() 
JAIRMICRIF7=RemoteException occurs in getProperty()
JAIRMICRIF8=RemoteException occurs in getPropertyNames()
JAIRMICRIF9=RemoteException occurs in isDynamic()

JAIRMIImageServer0=No suitable TileEncoder could be found to encode the tile before transmission.
JAIRMIImageServer1=Cannot encode according to the specified tile codec scheme which does not include SampleModel or location info in the encoded stream.
JAIRMIImageServer2=Cannot transmit compressed tile, there is no negotiated result for the "tileCodec" category.
JAIRMIImageServer3=No appropriate ContextualRenderedImageFactory exists for the specified operationName. 

RemoteImage1=Incorrect server name string.

RenderingKeyState0=This RenderingHints.Key is not predefined and cannot be serialized.

RenderableRMIServerProxy0=RemoteException occurs in getting the image width/height.
RenderableRMIServerProxy1=RemoteException occurs in getting the image position.

RMIImageImpl0=Server construction error: 
RMIImageImpl1=Server: Error: 
RMIImageImpl2=Unable to retrieve requested client object from the cache.
RMIImageImpl3=Server: using host/port
RMIImageImpl4=Registering image server as
RMIImageImpl5=Server: Bound RemoteImageServer into the registry.

RMIServerProxy0=No suitable TileDecoder could be found to encode the tile before transmission.
RMIServerProxy1=Cannot decode according to the specified tile codec scheme which does not include SampleModel or location info in the encoded stream.
RMIServerProxy2=Error encountered while disposing the corresponding node on the server.
RMIServerProxy3=The old rendering provided is not an instance of RMIServerProxy.
RMIServerProxy4=The property name of the supplied PropertyChangeEventJAI is not supported.
RMIServerProxy5=RemoteException occurs when creating the node.
RMIServerProxy6=RemoteException occurs when setting the sources.
RMIServerProxy7=RemoteException occurs when handling the event.
RMIServerProxy8=RemoteException occurs when creating renderable node.
RMIServerProxy9=RemoteException occurs when incrementing the reference count. 
RMIServerProxy10=RemoteException occurs when rendering the node.
RMIServerProxy11=Cannot get the server host address.
RMIServerProxy12=Cannot look up the remote object.
RMIServerProxy13=Cannot get the remote id.
RMIServerProxy14=RemoteException occurs when getting the image layout.
RMIServerProxy15=RemoteException occurs when getting a tile.
RMIServerProxy16=RemoteException occurs when getting the properties.
RMIServerProxy17=RemoteException occurs when getting the property names.
RMIServerProxy18=RemoteException occurs when mapping the source/dest rectangle.
RMIServerProxy19=RemoteException occurs when setting the server negotiation values.

SampleModelProxy0=Unknown SampleModel type.
SampleModelState0=Unsupported SampleModel type.

SerializableRenderableImage0=Incorrect object received as server request.
SerializableRenderableImage1=The source RenderableImage is null.
SerializableRenderableImage2=The format name is null.

SerializableStateImpl0=SerializableStateImpl subclass must override getSupportedClasses().
SerializableStateImpl1=The supplied Class or Object value is null.
SerializableStateImpl2=The supplied Class does not implement the supported interface.
SerializableStateImpl3=The supplied Class does not equal the supported class.
SerializableStateImpl4=The supplied Class is not assignable to the supported superclass.
SerializableStateImpl5=Unable to retrieve permitsSubclasses() by reflection.

SerializerImpl0=Supplied Class is not a subclass of SerializableStateImpl.
SerializerImpl1=Unable to retrieve getSupportedClasses() by reflection.
SerializerImpl2=Unable to retrieve SerializableStateImpl subclass constructor by reflection.
SerializerImpl3=Unable to construct SerializableState by reflection.
SerializerImpl4=Unable to retrieve permitsSubclasses() by reflection.

UseTileCodec0=The format name in the encoding parameter should be the same as the provided one.
UseTileCodec1=The format name in the decoding parameter should be the same as the provided one.
UseTileCodec2=The encoder or decoder factory is not registered for the provided format.
