<project name="macosx" default="build">

  <tstamp/>

  <!--===== Properties =====================================================-->

  <property name="common-dir" value="../lightcrafts"/>
  <property file="${common-dir}/src/main/resources/com/lightcrafts/utils/resources/Version.properties"/>

  <property name="app-dir" value="release"/>
  <property name="macosx-jar" value="products/lightcrafts-apple.jar"/>

  <!-- The default maxmemory for the run target. -->
  <property name="maxmemory" value="512m"/>

  <exec executable="cat" vmlauncher="false" failonerror="true"
        outputproperty="app-version">
    <arg value="${common-dir}/version.txt"/>
  </exec>

  <condition property="UNIVERSAL" value="1" else="0">
    <isset property="UNIVERSAL"/>
  </condition>

  <property name="JVMARG" value="--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED"/>

  <!--===== Application build ==============================================-->

  <target name="common">
    <ant dir="${common-dir}" target="jar"/>
    <exec executable="make" dir="products" failonerror="true"
          vmlauncher="false">
      <arg value="-j"/>
    </exec>
  </target>

  <target name="javac" depends="common">
    <mkdir dir="build/classes/java/main"/>
    <mkdir dir="javah"/>
    <javac destdir="build/classes/java/main" includeantruntime="false" debug="true"
           release="11" nativeheaderdir="javah">
      <src path="src/main/java"/>
      <compilerarg value="-XDignore.symbol.file"/>
      <classpath>
        <fileset dir="${common-dir}/products">
          <include name="*.jar"/>
        </fileset>
        <fileset dir="${common-dir}/lib">
          <include name="lombok*.jar"/>
          <include name="annotations*.jar"/>
          <include name="jsr305*.jar"/>
        </fileset>
        <fileset dir="lib">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <target name="locale">
    <copy todir="build/resources/main">
      <fileset dir="src/main/locale" excludes=".git"/>
    </copy>
  </target>

  <target name="jni">
    <exec executable="make" dir="jnisrc" failonerror="true" vmlauncher="false">
      <arg value="UNIVERSAL=${UNIVERSAL}"/>
    </exec>
  </target>

  <target name="build" depends="javac, locale, jni"/>

  <!--===== Make a jar file ================================================-->

  <target name="jar" depends="build">
    <delete file="${macosx-jar}"/>
    <jar jarfile="${macosx-jar}">
      <fileset dir="build/classes/java/main"/>
      <fileset dir="build/resources/main"/>
      <manifest>
        <attribute name="Main-Class"
                   value="com.lightcrafts.platform.macosx.MacOSXLauncher"/>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Implementation-Vendor" value="${company-name}"/>
        <attribute name="Implementation-Version"
                   value="${app-version} ${TODAY}"/>
      </manifest>
    </jar>
  </target>

  <target name="check-for-jar">
    <condition property="jar-exists">
      <available file="${macosx-jar}"/>
    </condition>
  </target>

  <target name="jar-if-necessary" depends="check-for-jar" unless="jar-exists">
    <antcall target="jar"/>
  </target>

  <!--===== Run the application ============================================-->

  <target name="run" depends="jar-if-necessary">
    <java classname="com.lightcrafts.platform.macosx.MacOSXLauncher"
          dir="products" failonerror="true" fork="true"
          maxmemory="${maxmemory}">
      <jvmarg line="${JVMARG}"/>
      <classpath>
        <fileset dir="products">
          <include name="*.jar"/>
        </fileset>
      </classpath>
      <env key="JAVA_JVM_VERSION" value="${jvm-version}"/>
      <sysproperty key="java.library.path" value="."/>
      <sysproperty key="lightcrafts.debug" value="1"/>
      <sysproperty key="apple.awt.graphics.EnableDeferredUpdates" value="false"/>
      <sysproperty key="file.encoding" value="utf-8"/>
      <sysproperty key="lensfun.dir" value="./share/lensfun"/>
    </java>
  </target>

  <!--===== Make Mac OS X application bundles ==============================-->

  <property name="bundle-contents" value="${app-dir}/${app-name}.app/Contents"/>
  <property name="bundle-resources" value="${bundle-contents}/Resources"/>

  <property environment="env"/>
  <property name="jpackage-path" value="${env.JAVA_HOME}/bin/jpackage"/>

  <target name="delete-bundle">
    <delete dir="${app-dir}" quiet="true"/>
  </target>

  <target name="build-bundle" depends="jar, delete-bundle">
    <!-- <exec executable="${common-dir}/tools/bin/lc-git-revision"
          outputproperty="git-revision" vmlauncher="false" failonerror="true"/> -->
    <exec executable="${jpackage-path}" dir="." failonerror="true" vmlauncher="false">
      <arg line="--type app-image"/>
      <arg line="--app-version ${app-version}"/>
      <arg line="--name ${app-name}"/>
      <arg line="--copyright 'Copyright 2005-2011 Light Crafts, Inc. All Rights Reserved. Copyright 2013- The LightZone Project. All Rights Reserved.'"/>
      <arg line="--dest release"/>
      <arg line="--vendor 'The LightZone Project'"/>
      <arg line="--add-modules 'java.base,java.desktop,java.logging,java.management,java.prefs,java.rmi,jdk.management'"/>
      <arg line="--icon src/main/resources/LightZone.icns"/>
      <arg line="--input products"/>
      <arg line="--java-options '-Xdock:name=LightZone'"/>
      <arg line="--java-options '-Dapple.laf.useScreenMenuBar=true'"/>
      <arg line="--java-options '-Dcom.apple.macos.use-file-dialog-packages=true'"/>
      <arg line="--java-options '-Dcom.apple.macos.useScreenMenuBar=true'"/>
      <arg line="--java-options '-Dapple.awt.graphics.UseQuartz=false'"/>
      <arg line="--java-options '-Dfile.encoding=utf-8'"/>
      <arg line="--java-options '-Djava.library.path=$APPDIR'"/>
      <arg line="--java-options '-Dlensfun.dir=$APPDIR/share/lensfun'"/>
      <arg line="--java-options '--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED'"/>
      <arg line="--main-jar lightcrafts-apple.jar"/>
      <arg line="--resource-dir src/main/resources"/>
    </exec>
    <exec executable="./postprocess.sh" dir="." failonerror="true" vmlauncher="false">
      <arg value="${bundle-contents}/app"/>
    </exec>
    <delete file="${bundle-contents}/app/GNUmakefile"/>
    <copy todir="${bundle-contents}/app/share/lensfun">
      <fileset dir="products/share/lensfun"/>
    </copy>
    <copy file="src/main/resources/LightZoneFile.icns" todir="${bundle-contents}/Resources/"/>
    <exec executable="make" dir="help" failonerror="true" vmlauncher="false"/>
  </target>

  <!--===== Make a dmg file ================================================-->

  <target name="delete-dmg">
    <delete file="${app-name}-${app-version}.dmg" quiet="true"/>
  </target>

  <target name="dmg" depends="delete-dmg,build-bundle">
    <exec executable="${jpackage-path}" dir="." failonerror="true" vmlauncher="false">
      <arg line="--type dmg"/>
      <arg line="--app-version ${app-version}"/>
      <arg line="--app-image ${app-dir}/${app-name}.app"/>
      <arg line="--name ${app-name}"/>
    </exec>
  </target>

  <!--===== Javadoc ========================================================-->

  <target name="javadoc">
    <mkdir dir="doc"/>
    <javadoc destdir="doc">
      <fileset dir="src"/>
    </javadoc>
  </target>

  <!--===== Clean up =======================================================-->

  <target name="clean-up">
    <ant dir="${common-dir}" target="${clean-method}"/>
    <parallel>
      <delete dir="build"/>
      <delete dir="javah"/>
      <delete dir="${app-dir}"/>
    </parallel>
    <exec executable="make" dir="jnisrc">
      <arg value="-j"/>
      <arg value="UNIVERSAL=1"/>
      <arg value="${clean-method}"/>
    </exec>
    <exec executable="make" dir="products">
      <arg value="-j"/>
      <arg value="${clean-method}"/>
    </exec>
  </target>

  <target name="distclean" depends="delete-bundle,delete-dmg">
    <antcall target="clean-up">
      <param name="clean-method" value="distclean"/>
    </antcall>
  </target>
  <target name="clean" depends="distclean"/>

  <target name="mostlyclean">
    <antcall target="clean-up">
      <param name="clean-method" value="mostlyclean"/>
    </antcall>
  </target>

</project>
<!-- vim:set et sw=2 ts=2: -->
